<?xml version="1.0" encoding="utf-8" ?>
<Language Name="LUA" Startblock="Code">
	<FileTypes>
		<FileType Extension=".lua" Name="LUA Source File"/>
	</FileTypes>

	<Block Name="Code" Style="Code" IsMultiline="true">
		<!-- Keywords that can exist inside this block -->
		<Scope Start="function" End="end" StartIsComplex="true" EndIsComplex="true" EndIsSeparator="true" Style="Scope" Text="function *** ..." CausesIndent="true" />
		<Scope Start="for" End="end" StartIsComplex="true" EndIsComplex="true" EndIsSeparator="true" Style="Scope" Text="for *** ..." CausesIndent="true" />
		<Scope Start="if" End="end" StartIsComplex="true" EndIsComplex="true" EndIsSeparator="true" Style="Scope" Text="if *** ..." CausesIndent="true" />
		<Keywords>
			<PatternGroup Name="Keywords" Style="Keyword" CaseSensitive="true">
				<Patterns>
					and
					break
					do
					else
					elseif
					end
					for
					function
					if
					in
					local
					not
					or
					repeat
					return
					then
					until
					while
				</Patterns>
			</PatternGroup>

			<PatternGroup Name="Keywords2" Style="Keyword" CaseSensitive="true">
				<Patterns>
					assert
					collectgarbage
					dofile
					error
					_G
					getfenv
					getmetatable
					gcinfo
					ipairs
					loadfile
					loadstring
					module
					next
					pairs
					pcall
					print
					rawequal
					rawget
					rawset
					require
					setfenv
					setmetatable
					tonumber
					tostring
					type
					unpack
					_VERSION
					xpcall

					coroutine.create
					coroutine.resume
					coroutine.status
					coroutine.wrap
					coroutine.yield

					debug.debug
					debug.gethook
					debug.getinfo
					debug.getlocal
					debug.getupvalue
					debug.sethook
					debug.setlocal
					debug.setupvalue
					debug.traceback

					io.close
					io.flush
					io.input
					io.lines
					io.open
					io.output
					io.read
					io.stderr
					io.stdin
					io.stdout
					io.tmpfile
					io.type
					io.write
					:close
					:flush
					:lines
					:read
					:seek
					:write

					math.abs
					math.acos
					math.asin
					math.atan
					math.atan2
					math.ceil
					math.cos
					math.deg
					math.exp
					math.floor
					math.frexp
					math.ldexp
					math.log
					math.log10
					math.max
					math.min
					math.fmod
					math.pi
					math.pow
					math.rad
					math.random
					math.randomseed
					math.sin
					math.sqrt
					math.tan

					os.clock
					os.date
					os.difftime
					os.execute
					os.exit
					os.getenv
					os.remove
					os.rename
					os.setlocale
					os.time
					os.tmpname

					package.cpath
					package.loaded
					package.loaders
					package.loadlib
					package.path
					package.preload
					package.seeall

					string.byte
					string.char
					string.dump
					string.find
					string.format
					string.gmatch
					string.gsub
					string.len
					string.lower
					string.rep
					string.sub
					string.upper

					table.concat
					table.getn
					table.insert
					table.remove
					table.sort
				</Patterns>
			</PatternGroup>

			<PatternGroup Name="Constants" Style="Constant">
				<Patterns>
					false
					nil
					true
				</Patterns>
			</PatternGroup>

			<PatternGroup Name="Numbers" Style="Number">
				<Pattern Text="([0-9]+)" IsComplex="true" />
			</PatternGroup>

			<PatternGroup Name="LoveKeywords" Style="LoveKeyword">
				<Patterns>
					love.audio.newSound
					love.audio.newMusic
					love.audio.play
					love.audio.pause
					love.audio.resume
					love.audio.stop
					love.audio.isPlaying
					love.audio.isPaused
					love.audio.setChannels
					love.audio.setMode
					love.audio.setVolume

					love.filesystem.newFile
					love.filesystem.newFile
					love.filesystem.getWorkingDirectory
					love.filesystem.getSaveDirectory
					love.filesystem.exists
					love.filesystem.isDirectory
					love.filesystem.isFile
					love.filesystem.mkdir
					love.filesystem.remove
					love.filesystem.open
					love.filesystem.close
					love.filesystem.read
					love.filesystem.write
					love.filesystem.lines
					love.filesystem.eof
					love.filesystem.tell
					love.filesystem.seek
					love.filesystem.enumerate
					love.filesystem.require
					love.filesystem.include
					love.filesystem.load

				</Patterns>
			</PatternGroup>
		</Keywords>

		<!-- Operators that can exist inside this block -->
		<Operators>
			<PatternGroup name="Operators" Style="Operator">
				<!--<Pattern Text="." />-->
				<Pattern Text="!" />
				<Pattern Text=":" />
				<Pattern Text="^" />
				<Pattern Text="*" />
				<Pattern Text="/" />
				<Pattern Text="+" />
				<Pattern Text="-" />
				<Pattern Text="=" />
				<Pattern Text=";" />
				<Pattern Text="|" />
				<Pattern Text=".." />
			</PatternGroup>
		</Operators>
		<!-- Blocks that can exist inside this block -->
		<ChildBlocks>
			<Child Name="Multiline Comment" />
			<Child Name="Singleline Comment" />
			<Child Name="String" />
			<Child Name="Char" />
			<Child Name="Code" />
		</ChildBlocks>
	</Block>

	<Block Name="Multiline Comment" Style="Comment"  IsMultiline="true">
		<Scope Start="--[[" End="]]" Style="Comment" Text="--[[...]]"/>
	</Block>
	<Block Name="Singleline Comment" Style="Comment"  IsMultiline="false">
		<Scope Start="--" End="" Style="Comment" />
	</Block>
	<Block Name="String" Style="String" IsMultiline="true">
		<Scope Start="&quot;" End="&quot;" EscapeChar="\" Style="String" />
	</Block>

	<Block Name="Char" Style="String" EscapeChar="" IsMultiline="false">
		<Scope Start="'" End="'"  EscapeChar="\" Style="String" />
	</Block>

	<Style Name="Code" ForeColor="" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="Scope" ForeColor="Blue" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="Comment" ForeColor="Green" BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="String" ForeColor="Teal" BackColor="" Bold="true" Italic="false" Underline="false" />
	<Style Name="Number" ForeColor="Teal" BackColor="" Bold="true" Italic="false" Underline="false" />
	<Style Name="Keyword" ForeColor="Blue" BackColor="" Bold="true" Italic="false" Underline="false" />
	<Style Name="LoveKeyword" ForeColor="DarkRed" 	BackColor="" Bold="false" Italic="false" Underline="false" />
	<Style Name="Constant" ForeColor="DarkGray" BackColor="" Bold="true" Italic="false" Underline="false" />

</Language>